// <auto-generated />
using System;
using FlyingDutchmanAirlines.RepositoryLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlyingDutchmanAirlines.Migrations
{
    [DbContext(typeof(FlyingDutchmanAirlinesContext))]
    [Migration("20221224113650_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("FlyingDutchmanAirlines.RepositoryLayer.Models.Airport", b =>
                {
                    b.Property<int>("AirportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("IATA")
                        .HasColumnType("TEXT");

                    b.HasKey("AirportId");

                    b.ToTable("Airports");

                    b.HasData(
                        new
                        {
                            AirportId = 1,
                            City = "Groningen",
                            IATA = "GRQ"
                        },
                        new
                        {
                            AirportId = 2,
                            City = "London",
                            IATA = "LHR"
                        });
                });

            modelBuilder.Entity("FlyingDutchmanAirlines.RepositoryLayer.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FlightNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FlightNumberId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookingId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("FlightNumber");

                    b.ToTable("Bokings");
                });

            modelBuilder.Entity("FlyingDutchmanAirlines.RepositoryLayer.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FlyingDutchmanAirlines.RepositoryLayer.Models.Flight", b =>
                {
                    b.Property<int>("FlightNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Destination")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Origin")
                        .HasColumnType("INTEGER");

                    b.HasKey("FlightNumber");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            FlightNumber = 1,
                            Destination = 2,
                            Origin = 1
                        },
                        new
                        {
                            FlightNumber = 2,
                            Destination = 1,
                            Origin = 2
                        });
                });

            modelBuilder.Entity("FlyingDutchmanAirlines.RepositoryLayer.Models.Booking", b =>
                {
                    b.HasOne("FlyingDutchmanAirlines.RepositoryLayer.Models.Customer", "Customer")
                        .WithMany("Booking")
                        .HasForeignKey("CustomerId");

                    b.HasOne("FlyingDutchmanAirlines.RepositoryLayer.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightNumber");

                    b.Navigation("Customer");

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("FlyingDutchmanAirlines.RepositoryLayer.Models.Customer", b =>
                {
                    b.Navigation("Booking");
                });
#pragma warning restore 612, 618
        }
    }
}
